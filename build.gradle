plugins {
    id "com.github.johnrengelman.shadow" version "1.2.2"
    id 'net.researchgate.release' version '2.3.4'
}
apply plugin: 'java'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'net.researchgate.release'

sourceCompatibility = 1.8
targetCompatibility = 1.8
compileJava.options.encoding = 'UTF-8'

group = 'com.github.target2sell'
description = 'Java Cassandra connector for Spark JobServer'
defaultTasks = ['build']

repositories {
    mavenCentral()
    maven {
        url 'https://dl.bintray.com/spark-jobserver/maven'
    }
}

def JACKSON_VERSION = '2.3.5'

dependencies {
    compile 'org.slf4j:slf4j-api:1.7.12'
    compile 'spark.jobserver:job-server_2.10:0.6.0'
    compile 'joda-time:joda-time:2.3'
    compile 'com.datastax.cassandra:cassandra-driver-core:2.1.8'
    compile 'com.fasterxml.jackson.core:jackson-core:' + JACKSON_VERSION
    compile 'com.fasterxml.jackson.datatype:jackson-datatype-joda:' + JACKSON_VERSION
    compile 'com.fasterxml.jackson.module:jackson-module-scala_2.10:' + JACKSON_VERSION

    testCompile 'junit:junit:4.12'
    testCompile 'org.hamcrest:hamcrest-core:1.3'
    testCompile 'org.hamcrest:hamcrest-library:1.3'
    testCompile 'org.slf4j:slf4j-simple:1.7.12'
    testCompile 'org.cassandraunit:cassandra-unit:2.1.9.2'
}

shadowJar {
    classifier = 'all'
    dependencies {
        include(dependency('com.fasterxml.jackson.datatype:jackson-datatype-joda:' + JACKSON_VERSION))
    }
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives shadowJar, javadocJar, sourcesJar
}

signing {
    sign configurations.archives
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project {
                name = group + ':' + name
                packaging = 'jar'
                description = description
                url = 'https://github.com/target2sell/spark-jobserver-cassandra-connector'

                scm {
                    connection = 'scm:git:https://github.com/target2sell/spark-jobserver-cassandra-connector.git'
                    developerConnection = 'scm:git:https://github.com/target2sell/spark-jobserver-cassandra-connector.git'
                    url = 'https://github.com/target2sell/spark-jobserver-cassandra-connector'
                }

                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id 't2s'
                        name = 'Cyrille Nofficial'
                        email = 'cyrille.nofficial@target2sell.com'
                        organization = 'Target2sell'
                        organizationUrl = 'http://www.target2sell.com/'
                    }
                    developer {
                        id 'jpcaruana_t2s'
                        name = 'Jean-Philippe Caruana`'
                        email = 'jp@target2sell.com'
                        organization = 'Target2sell'
                        organizationUrl = 'http://www.target2sell.com/'
                    }
                }
            }
        }
    }
}


